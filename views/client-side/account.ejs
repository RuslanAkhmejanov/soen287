<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Professional hair salon offering services like coloring, styling, and haircuts for men and women.">
    <meta name="keywords" content="hair salon, haircuts, hair styling, coloring, beauty services">
    <title><%= business.name %> | Account</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/client-side/design.css">
    <link rel="icon" type="image/svg+xml" href="<%= business.logos.svg %>">
    <link rel="icon" type="image/png" href="<%= business.logos.png %>">
</head>

<body>
    <!-- Header with Navbar -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-light custom-navbar" id="navbar">
            <div class="container">
                <h3 class="salon-name"><%= business.name %></h3>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item active"><a class="nav-link" href="#account-info">Account Info</a></li>
                        <li class="nav-item"><a class="nav-link" href="#book-services">Book Services</a></li>
                        <li class="nav-item"><a class="nav-link" href="#my-services">My Services</a></li>
                        <li class="nav-item"><a class="nav-link" href="#bills-receipts">Bills</a></li>
                    </ul>
                    <a href="/" class="btn btn-secondary ml-lg-3" aria-label="Go Back to Home">Back</a>
                </div>
            </div>
        </nav>
    </header>

    <!-- Account Information Section -->
    <section id="account-info" class="mt-5">
        <div class="container d-flex justify-content-center mt-5">
            <div class="card">
                <div class="top-container">
                    <img src="https://i.imgur.com/G1pXs7D.jpg" class="img-fluid profile-image" width="70">
                    <div class="ml-3">
                        <h5 class="name"><%= user.name %></h5>
                        <p class="mail"><%= user.username %></p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Edit Account Information Section -->
    <section id="edit-account-info" class="mt-5">
        <div class="container">
            <h2 class="text-center">Edit Account Information</h2>
            <form id="edit-account-form">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                </div>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" class="form-control" id="username" name="username" required>
                </div>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                </div>
                <button type="submit" class="btn btn-primary">Update Account</button>
                <button type="button" id="delete-account" class="btn btn-danger">Delete Account</button>
            </form>
        </div>
    </section>

    <!-- My Services Section with Create, Edit, and Delete Options -->
    <section id="my-services" class="mt-5">
        <div class="container">
            <h2 class="text-center">My Services</h2>
            <p class="text-center">View, edit, create, and delete your appointments.</p>

            <!-- Button to Trigger New Appointment Form -->
            <button class="btn btn-success mb-3" data-toggle="modal" data-target="#newAppointmentModal">Create New Appointment</button>

            <table class="table table-bordered" id="appointments-table">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">Service</th>
                        <th scope="col">Date</th>
                        <th scope="col">Time</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Existing Appointments will go here -->
                    <tr>
                        <td>Women's Haircut</td>
                        <td>October 28, 2024</td>
                        <td>2:00 PM</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="editAppointment(1)">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteAppointment(1)">Delete</button>
                        </td>
                    </tr>
                    <tr>
                        <td>Hair Coloring</td>
                        <td>November 5, 2024</td>
                        <td>11:00 AM</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="editAppointment(2)">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteAppointment(2)">Delete</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Modal for Creating and Editing Appointment -->
<div class="modal fade" id="newAppointmentModal" tabindex="-1" role="dialog" aria-labelledby="newAppointmentModalLabel" aria-hidden="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newAppointmentModalLabel">Create New Appointment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="create-appointment-form">
                    <div class="form-group">
                        <label for="service">Service:</label>
                        <select class="form-control" id="service" name="service" required>
                            <option value="Coloring">Coloring</option>
                            <option value="Styling">Styling</option>
                            <option value="Men's Cut">Men's Cut</option>
                            <option value="Women's Cut">Women's Cut</option>
                        </select>
                    </div>

                    <!-- Stylist Dropdown -->
                    <div class="form-group">
                        <label for="stylist">Choose Your Stylist:</label>
                        <select class="form-control" id="stylist" name="stylist" required>
                            <option value="Jasmine">Jasmine</option>
                            <option value="Mark">Mark</option>
                            <option value="Sarah">Sarah</option>
                            <option value="Emily">Emily</option>
                        </select>
                    </div>

                    <!-- Date Input -->
                    <div class="form-group">
                        <label for="appointment-date">Date:</label>
                        <input type="date" class="form-control" id="appointment-date" name="date" required>
                    </div>

                    <!-- Time Input -->
                    <div class="form-group">
                        <label for="appointment-time">Time:</label>
                        <input type="time" class="form-control" id="appointment-time" name="time" required>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" id="submit-appointment-btn" class="btn btn-primary">Create Appointment</button>
                </form>
            </div>
        </div>
    </div>
</div>


    <script>
        // Handle Account Update
        document.getElementById('edit-account-form').addEventListener('submit', async (event) => {
            event.preventDefault();
            const name = document.getElementById('name').value;
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            try {
                const response = await fetch('/account/update', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, username, password })
                });

                if (response.ok) {
                    alert('Account updated successfully');
                    location.reload();
                } else {
                    alert('Failed to update account');
                }
            } catch (error) {
                console.error('Error updating account:', error);
                alert('Error updating account');
            }
        });

        // Handle Account Deletion
        document.getElementById('delete-account').addEventListener('click', async () => {
            if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
                try {
                    const response = await fetch('/account/delete', {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        alert('Account deleted successfully');
                        window.location.href = '/'; // Redirect to home page after deletion
                    } else {
                        alert('Failed to delete account');
                    }
                } catch (error) {
                    console.error('Error deleting account:', error);
                    alert('Error deleting account');
                }
            }
        });

        // Handle Appointment Creation
        document.getElementById('create-appointment-form').addEventListener('submit', async (event) => {
            event.preventDefault();

            const service = document.getElementById('service').value;
            const stylist = document.getElementById('stylist').value;
            const date = document.getElementById('appointment-date').value;
            const time = document.getElementById('appointment-time').value;

            try {
                const response = await fetch(\soen287\migrations\20241122171221-create_appointments_table.cjs, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ service, stylist, date, time })
                });

                if (response.ok) {
                    const newAppointment = await response.json();
                    
                    const table = document.getElementById('appointments-table').querySelector('tbody');
                    const newRow = document.createElement('tr');
                    
                    newRow.innerHTML = `
                        <td>${newAppointment.service}</td>
                        <td>${newAppointment.date}</td>
                        <td>${newAppointment.time}</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="editAppointment(${newAppointment.id})">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteAppointment(${newAppointment.id})">Delete</button>
                        </td>
                    `;
                    
                    table.appendChild(newRow);
                    
                    // Close the modal
                    $('#newAppointmentModal').modal('hide');
                    alert('Appointment created successfully');
                } else {
                    alert('Failed to create appointment');
                }
            } catch (error) {
                console.error('Error creating appointment:', error);
                alert('Error creating appointment');
            }
        });

        // Edit Appointment
        function editAppointment(appointmentId) {
            const modal = new bootstrap.Modal(document.getElementById('newAppointmentModal'));
            modal.show();

            fetch(`/appointments/${appointmentId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('service').value = data.service;
                    document.getElementById('stylist').value = data.stylist;
                    document.getElementById('appointment-date').value = data.date;
                    document.getElementById('appointment-time').value = data.time;
                    document.getElementById('submit-appointment-btn').textContent = 'Update Appointment';

                    const editForm = document.getElementById('create-appointment-form');
                    editForm.onsubmit = async function(event) {
                        event.preventDefault();

                        const updatedService = document.getElementById('service').value;
                        const updatedStylist = document.getElementById('stylist').value;
                        const updatedDate = document.getElementById('appointment-date').value;
                        const updatedTime = document.getElementById('appointment-time').value;

                        try {
                            const response = await fetch(`/appointments/edit/${appointmentId}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ service: updatedService, stylist: updatedStylist, date: updatedDate, time: updatedTime })
                            });

                            if (response.ok) {
                                alert('Appointment updated successfully');
                                location.reload();
                            } else {
                                alert('Failed to update appointment');
                            }
                        } catch (error) {
                            console.error('Error editing appointment:', error);
                            alert('Error editing appointment');
                        }
                    };
                })
                .catch(error => {
                    console.error('Error fetching appointment data:', error);
                    alert('Error fetching appointment data');
                });
        }

        // Delete Appointment
        function deleteAppointment(appointmentId) {
            if (confirm('Are you sure you want to delete this appointment?')) {
                fetch(`/appointments/delete/${appointmentId}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        alert('Appointment deleted successfully');
                        location.reload();
                    } else {
                        alert('Failed to delete appointment');
                    }
                })
                .catch(error => {
                    console.error('Error deleting appointment:', error);
                    alert('Error deleting appointment');
                });
            }
        }
    </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.3/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

</body>
</html>
